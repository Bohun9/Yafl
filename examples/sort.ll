; ModuleID = 'YaflModule'


 


declare external ccc  i8* @malloc(i32)    


declare external ccc  void @exit(i32)    


declare external ccc  void @match_error()    


declare external ccc  void @division_error()    


declare external ccc  i64 @print_int(i8*, i64)    


declare external ccc  i64 @read_int(i8*, i64)    


declare external ccc  i64 @print_newline(i8*, i64)    


declare external ccc  i64 @print_space(i8*, i64)    


define external ccc  {i64}* @__anon15_8(i8* , i64 )    {
; <label>:2:
  %3 = bitcast i8* %0 to {{i64}* (i8*, i64)*, i8*}* 
  %4 = getelementptr  {{i64}* (i8*, i64)*, i8*}, {{i64}* (i8*, i64)*, i8*}* %3, i32 0, i32 1 
  %5 = load  i8*, i8** %4, align 1 
  %6 = bitcast i8* %5 to {{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*, {i64}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}* 
  %7 =  call ccc  i8*  @malloc(i32  ptrtoint ({{{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*, {i64}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*}* getelementptr inbounds ({{{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*, {i64}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*}, {{{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*, {i64}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*}* inttoptr (i32 0 to {{{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*, {i64}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*}*), i32 1) to i32))  
  %8 = bitcast i8* %7 to {{{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*, {i64}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*}* 
  %9 = bitcast {{{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*, {i64}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*}* %8 to i8* 
  %10 = getelementptr  {{{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*, {i64}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*}, {{{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*, {i64}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*}* %8, i32 0, i32 0 
  store  {{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*, {i64}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}* %6, {{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*, {i64}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}** %10, align 1 
  %11 = getelementptr  {{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*, {i64}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}, {{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*, {i64}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}* %6, i32 0, i32 1 
  %12 = load  {i64}*, {i64}** %11, align 1 
  %13 = getelementptr  {i64}, {i64}* %12, i32 0, i32 0 
  %14 = load  i64, i64* %13, align 1 
  switch i64 %14, label %L_0 [i64 0, label %L_2 i64 1, label %L_3] 
L_2:
  %15 = bitcast {i64}* %12 to {i64}* 
  %16 =  call ccc  i8*  @malloc(i32  ptrtoint ({i64}* getelementptr inbounds ({i64}, {i64}* inttoptr (i32 0 to {i64}*), i32 1) to i32))  
  %17 = bitcast i8* %16 to {i64}* 
  %18 = getelementptr  {i64}, {i64}* %17, i32 0, i32 0 
  store  i64 0, i64* %18, align 1 
  %19 = bitcast {i64}* %17 to {i64}* 
  %20 =  call ccc  i8*  @malloc(i32  ptrtoint ({i64}* getelementptr inbounds ({i64}, {i64}* inttoptr (i32 0 to {i64}*), i32 1) to i32))  
  %21 = bitcast i8* %20 to {i64}* 
  %22 = getelementptr  {i64}, {i64}* %21, i32 0, i32 0 
  store  i64 0, i64* %22, align 1 
  %23 = bitcast {i64}* %21 to {i64}* 
  %24 =  call ccc  i8*  @malloc(i32  ptrtoint ({i64, {i64}*, i64, {i64}*}* getelementptr inbounds ({i64, {i64}*, i64, {i64}*}, {i64, {i64}*, i64, {i64}*}* inttoptr (i32 0 to {i64, {i64}*, i64, {i64}*}*), i32 1) to i32))  
  %25 = bitcast i8* %24 to {i64, {i64}*, i64, {i64}*}* 
  %26 = getelementptr  {i64, {i64}*, i64, {i64}*}, {i64, {i64}*, i64, {i64}*}* %25, i32 0, i32 0 
  store  i64 1, i64* %26, align 1 
  %27 = getelementptr  {i64, {i64}*, i64, {i64}*}, {i64, {i64}*, i64, {i64}*}* %25, i32 0, i32 1 
  store  {i64}* %19, {i64}** %27, align 1 
  %28 = getelementptr  {i64, {i64}*, i64, {i64}*}, {i64, {i64}*, i64, {i64}*}* %25, i32 0, i32 2 
  store  i64 %1, i64* %28, align 1 
  %29 = getelementptr  {i64, {i64}*, i64, {i64}*}, {i64, {i64}*, i64, {i64}*}* %25, i32 0, i32 3 
  store  {i64}* %23, {i64}** %29, align 1 
  %30 = bitcast {i64, {i64}*, i64, {i64}*}* %25 to {i64}* 
  br label %L_4 
L_3:
  %31 = bitcast {i64}* %12 to {i64, {i64}*, i64, {i64}*}* 
  %32 = getelementptr  {i64, {i64}*, i64, {i64}*}, {i64, {i64}*, i64, {i64}*}* %31, i32 0, i32 1 
  %33 = load  {i64}*, {i64}** %32, align 1 
  %34 = getelementptr  {i64, {i64}*, i64, {i64}*}, {i64, {i64}*, i64, {i64}*}* %31, i32 0, i32 2 
  %35 = load  i64, i64* %34, align 1 
  %36 = getelementptr  {i64, {i64}*, i64, {i64}*}, {i64, {i64}*, i64, {i64}*}* %31, i32 0, i32 3 
  %37 = load  {i64}*, {i64}** %36, align 1 
  %38 = icmp slt i64 %1, %35 
  br i1 %38, label %L_5, label %L_6 
L_5:
  %39 = getelementptr  {{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*, {i64}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}, {{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*, {i64}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}* %6, i32 0, i32 2 
  %40 = load  {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}** %39, align 1 
  %41 = getelementptr  {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}* %40, i32 0, i32 0 
  %42 = load  {{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, {{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)** %41, align 1 
  %43 = bitcast {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}* %40 to i8* 
  %44 =  call ccc  {{i64}* (i8*, i64)*, i8*}*  %42(i8*  %43, {i64}*  %33)  
  %45 = getelementptr  {{i64}* (i8*, i64)*, i8*}, {{i64}* (i8*, i64)*, i8*}* %44, i32 0, i32 0 
  %46 = load  {i64}* (i8*, i64)*, {i64}* (i8*, i64)** %45, align 1 
  %47 = bitcast {{i64}* (i8*, i64)*, i8*}* %44 to i8* 
  %48 =  call ccc  {i64}*  %46(i8*  %47, i64  %1)  
  %49 =  call ccc  i8*  @malloc(i32  ptrtoint ({i64, {i64}*, i64, {i64}*}* getelementptr inbounds ({i64, {i64}*, i64, {i64}*}, {i64, {i64}*, i64, {i64}*}* inttoptr (i32 0 to {i64, {i64}*, i64, {i64}*}*), i32 1) to i32))  
  %50 = bitcast i8* %49 to {i64, {i64}*, i64, {i64}*}* 
  %51 = getelementptr  {i64, {i64}*, i64, {i64}*}, {i64, {i64}*, i64, {i64}*}* %50, i32 0, i32 0 
  store  i64 1, i64* %51, align 1 
  %52 = getelementptr  {i64, {i64}*, i64, {i64}*}, {i64, {i64}*, i64, {i64}*}* %50, i32 0, i32 1 
  store  {i64}* %48, {i64}** %52, align 1 
  %53 = getelementptr  {i64, {i64}*, i64, {i64}*}, {i64, {i64}*, i64, {i64}*}* %50, i32 0, i32 2 
  store  i64 %35, i64* %53, align 1 
  %54 = getelementptr  {i64, {i64}*, i64, {i64}*}, {i64, {i64}*, i64, {i64}*}* %50, i32 0, i32 3 
  store  {i64}* %37, {i64}** %54, align 1 
  %55 = bitcast {i64, {i64}*, i64, {i64}*}* %50 to {i64}* 
  br label %L_7 
L_6:
  %56 = getelementptr  {{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*, {i64}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}, {{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*, {i64}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}* %6, i32 0, i32 2 
  %57 = load  {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}** %56, align 1 
  %58 = getelementptr  {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}* %57, i32 0, i32 0 
  %59 = load  {{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, {{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)** %58, align 1 
  %60 = bitcast {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}* %57 to i8* 
  %61 =  call ccc  {{i64}* (i8*, i64)*, i8*}*  %59(i8*  %60, {i64}*  %37)  
  %62 = getelementptr  {{i64}* (i8*, i64)*, i8*}, {{i64}* (i8*, i64)*, i8*}* %61, i32 0, i32 0 
  %63 = load  {i64}* (i8*, i64)*, {i64}* (i8*, i64)** %62, align 1 
  %64 = bitcast {{i64}* (i8*, i64)*, i8*}* %61 to i8* 
  %65 =  call ccc  {i64}*  %63(i8*  %64, i64  %1)  
  %66 =  call ccc  i8*  @malloc(i32  ptrtoint ({i64, {i64}*, i64, {i64}*}* getelementptr inbounds ({i64, {i64}*, i64, {i64}*}, {i64, {i64}*, i64, {i64}*}* inttoptr (i32 0 to {i64, {i64}*, i64, {i64}*}*), i32 1) to i32))  
  %67 = bitcast i8* %66 to {i64, {i64}*, i64, {i64}*}* 
  %68 = getelementptr  {i64, {i64}*, i64, {i64}*}, {i64, {i64}*, i64, {i64}*}* %67, i32 0, i32 0 
  store  i64 1, i64* %68, align 1 
  %69 = getelementptr  {i64, {i64}*, i64, {i64}*}, {i64, {i64}*, i64, {i64}*}* %67, i32 0, i32 1 
  store  {i64}* %33, {i64}** %69, align 1 
  %70 = getelementptr  {i64, {i64}*, i64, {i64}*}, {i64, {i64}*, i64, {i64}*}* %67, i32 0, i32 2 
  store  i64 %35, i64* %70, align 1 
  %71 = getelementptr  {i64, {i64}*, i64, {i64}*}, {i64, {i64}*, i64, {i64}*}* %67, i32 0, i32 3 
  store  {i64}* %65, {i64}** %71, align 1 
  %72 = bitcast {i64, {i64}*, i64, {i64}*}* %67 to {i64}* 
  br label %L_7 
L_7:
  %73 = phi {i64}* [%55, %L_5], [%72, %L_6] 
  br label %L_4 
L_4:
  %74 = phi {i64}* [%30, %L_2], [%73, %L_7] 
  br label %L_1 
L_0:
   call ccc  void  @match_error()  
  br label %L_1 
L_1:
  %75 = phi {i64}* [%74, %L_4], [undef, %L_0] 
  ret {i64}* %75 
}


define external ccc  {{i64}* (i8*, i64)*, i8*}* @_tree_insert_10(i8* , {i64}* )    {
  %3 = bitcast i8* %0 to {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}* 
  %4 = getelementptr  {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}* %3, i32 0, i32 1 
  %5 = load  i8*, i8** %4, align 1 
  %6 = bitcast i8* %5 to {{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}* 
  %7 =  call ccc  i8*  @malloc(i32  ptrtoint ({{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*, {i64}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}* getelementptr inbounds ({{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*, {i64}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}, {{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*, {i64}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}* inttoptr (i32 0 to {{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*, {i64}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*), i32 1) to i32))  
  %8 = bitcast i8* %7 to {{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*, {i64}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}* 
  %9 = bitcast {{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*, {i64}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}* %8 to i8* 
  %10 = getelementptr  {{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*, {i64}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}, {{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*, {i64}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}* %8, i32 0, i32 0 
  store  {{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}* %6, {{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}** %10, align 1 
  %11 = getelementptr  {{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*, {i64}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}, {{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*, {i64}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}* %8, i32 0, i32 2 
  store  {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}* %3, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}** %11, align 1 
  %12 = getelementptr  {{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*, {i64}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}, {{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*, {i64}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}* %8, i32 0, i32 1 
  store  {i64}* %1, {i64}** %12, align 1 
  %13 =  call ccc  i8*  @malloc(i32  ptrtoint ({{i64}* (i8*, i64)*, i8*}* getelementptr inbounds ({{i64}* (i8*, i64)*, i8*}, {{i64}* (i8*, i64)*, i8*}* inttoptr (i32 0 to {{i64}* (i8*, i64)*, i8*}*), i32 1) to i32))  
  %14 = bitcast i8* %13 to {{i64}* (i8*, i64)*, i8*}* 
  %15 = getelementptr  {{i64}* (i8*, i64)*, i8*}, {{i64}* (i8*, i64)*, i8*}* %14, i32 0, i32 0 
  store  {i64}* (i8*, i64)* @__anon15_8, {i64}* (i8*, i64)** %15, align 1 
  %16 = getelementptr  {{i64}* (i8*, i64)*, i8*}, {{i64}* (i8*, i64)*, i8*}* %14, i32 0, i32 1 
  store  i8* %9, i8** %16, align 1 
  ret {{i64}* (i8*, i64)*, i8*}* %14 
}


define external ccc  {i64}* @__anon14_16(i8* , {i64}* )    {
; <label>:2:
  %3 = bitcast i8* %0 to {{i64}* (i8*, {i64}*)*, i8*}* 
  %4 = getelementptr  {{i64}* (i8*, {i64}*)*, i8*}, {{i64}* (i8*, {i64}*)*, i8*}* %3, i32 0, i32 1 
  %5 = load  i8*, i8** %4, align 1 
  %6 = bitcast i8* %5 to {{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*, {i64}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*}* 
  %7 =  call ccc  i8*  @malloc(i32  ptrtoint ({{{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*, {i64}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*}*}* getelementptr inbounds ({{{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*, {i64}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*}*}, {{{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*, {i64}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*}*}* inttoptr (i32 0 to {{{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*, {i64}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*}*}*), i32 1) to i32))  
  %8 = bitcast i8* %7 to {{{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*, {i64}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*}*}* 
  %9 = bitcast {{{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*, {i64}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*}*}* %8 to i8* 
  %10 = getelementptr  {{{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*, {i64}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*}*}, {{{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*, {i64}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*}*}* %8, i32 0, i32 0 
  store  {{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*, {i64}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*}* %6, {{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*, {i64}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*}** %10, align 1 
  %11 = getelementptr  {{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*, {i64}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*}, {{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*, {i64}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*}* %6, i32 0, i32 1 
  %12 = load  {i64}*, {i64}** %11, align 1 
  %13 = getelementptr  {i64}, {i64}* %12, i32 0, i32 0 
  %14 = load  i64, i64* %13, align 1 
  switch i64 %14, label %L_0 [i64 0, label %L_2 i64 1, label %L_3] 
L_2:
  %15 = bitcast {i64}* %12 to {i64}* 
  br label %L_4 
L_3:
  %16 = bitcast {i64}* %12 to {i64, {i64}*, i64, {i64}*}* 
  %17 = getelementptr  {i64, {i64}*, i64, {i64}*}, {i64, {i64}*, i64, {i64}*}* %16, i32 0, i32 1 
  %18 = load  {i64}*, {i64}** %17, align 1 
  %19 = getelementptr  {i64, {i64}*, i64, {i64}*}, {i64, {i64}*, i64, {i64}*}* %16, i32 0, i32 2 
  %20 = load  i64, i64* %19, align 1 
  %21 = getelementptr  {i64, {i64}*, i64, {i64}*}, {i64, {i64}*, i64, {i64}*}* %16, i32 0, i32 3 
  %22 = load  {i64}*, {i64}** %21, align 1 
  %23 = getelementptr  {{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*, {i64}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*}, {{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*, {i64}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*}* %6, i32 0, i32 2 
  %24 = load  {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}** %23, align 1 
  %25 = getelementptr  {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}* %24, i32 0, i32 0 
  %26 = load  {{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, {{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)** %25, align 1 
  %27 = bitcast {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}* %24 to i8* 
  %28 =  call ccc  {{i64}* (i8*, {i64}*)*, i8*}*  %26(i8*  %27, {i64}*  %22)  
  %29 = getelementptr  {{i64}* (i8*, {i64}*)*, i8*}, {{i64}* (i8*, {i64}*)*, i8*}* %28, i32 0, i32 0 
  %30 = load  {i64}* (i8*, {i64}*)*, {i64}* (i8*, {i64}*)** %29, align 1 
  %31 = bitcast {{i64}* (i8*, {i64}*)*, i8*}* %28 to i8* 
  %32 =  call ccc  {i64}*  %30(i8*  %31, {i64}*  %1)  
  %33 = getelementptr  {{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*, {i64}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*}, {{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*, {i64}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*}* %6, i32 0, i32 2 
  %34 = load  {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}** %33, align 1 
  %35 = getelementptr  {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}* %34, i32 0, i32 0 
  %36 = load  {{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, {{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)** %35, align 1 
  %37 = bitcast {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}* %34 to i8* 
  %38 =  call ccc  {{i64}* (i8*, {i64}*)*, i8*}*  %36(i8*  %37, {i64}*  %18)  
  %39 =  call ccc  i8*  @malloc(i32  ptrtoint ({i64, i64, {i64}*}* getelementptr inbounds ({i64, i64, {i64}*}, {i64, i64, {i64}*}* inttoptr (i32 0 to {i64, i64, {i64}*}*), i32 1) to i32))  
  %40 = bitcast i8* %39 to {i64, i64, {i64}*}* 
  %41 = getelementptr  {i64, i64, {i64}*}, {i64, i64, {i64}*}* %40, i32 0, i32 0 
  store  i64 1, i64* %41, align 1 
  %42 = getelementptr  {i64, i64, {i64}*}, {i64, i64, {i64}*}* %40, i32 0, i32 1 
  store  i64 %20, i64* %42, align 1 
  %43 = getelementptr  {i64, i64, {i64}*}, {i64, i64, {i64}*}* %40, i32 0, i32 2 
  store  {i64}* %32, {i64}** %43, align 1 
  %44 = bitcast {i64, i64, {i64}*}* %40 to {i64}* 
  %45 = getelementptr  {{i64}* (i8*, {i64}*)*, i8*}, {{i64}* (i8*, {i64}*)*, i8*}* %38, i32 0, i32 0 
  %46 = load  {i64}* (i8*, {i64}*)*, {i64}* (i8*, {i64}*)** %45, align 1 
  %47 = bitcast {{i64}* (i8*, {i64}*)*, i8*}* %38 to i8* 
  %48 =  call ccc  {i64}*  %46(i8*  %47, {i64}*  %44)  
  br label %L_4 
L_4:
  %49 = phi {i64}* [%1, %L_2], [%48, %L_3] 
  br label %L_1 
L_0:
   call ccc  void  @match_error()  
  br label %L_1 
L_1:
  %50 = phi {i64}* [%49, %L_4], [undef, %L_0] 
  ret {i64}* %50 
}


define external ccc  {{i64}* (i8*, {i64}*)*, i8*}* @_tree_to_list_fast_18(i8* , {i64}* )    {
  %3 = bitcast i8* %0 to {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}* 
  %4 = getelementptr  {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}* %3, i32 0, i32 1 
  %5 = load  i8*, i8** %4, align 1 
  %6 = bitcast i8* %5 to {{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}* 
  %7 =  call ccc  i8*  @malloc(i32  ptrtoint ({{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*, {i64}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*}* getelementptr inbounds ({{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*, {i64}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*}, {{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*, {i64}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*}* inttoptr (i32 0 to {{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*, {i64}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*}*), i32 1) to i32))  
  %8 = bitcast i8* %7 to {{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*, {i64}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*}* 
  %9 = bitcast {{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*, {i64}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*}* %8 to i8* 
  %10 = getelementptr  {{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*, {i64}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*}, {{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*, {i64}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*}* %8, i32 0, i32 0 
  store  {{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}* %6, {{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}** %10, align 1 
  %11 = getelementptr  {{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*, {i64}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*}, {{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*, {i64}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*}* %8, i32 0, i32 2 
  store  {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}* %3, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}** %11, align 1 
  %12 = getelementptr  {{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*, {i64}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*}, {{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*, {i64}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*}* %8, i32 0, i32 1 
  store  {i64}* %1, {i64}** %12, align 1 
  %13 =  call ccc  i8*  @malloc(i32  ptrtoint ({{i64}* (i8*, {i64}*)*, i8*}* getelementptr inbounds ({{i64}* (i8*, {i64}*)*, i8*}, {{i64}* (i8*, {i64}*)*, i8*}* inttoptr (i32 0 to {{i64}* (i8*, {i64}*)*, i8*}*), i32 1) to i32))  
  %14 = bitcast i8* %13 to {{i64}* (i8*, {i64}*)*, i8*}* 
  %15 = getelementptr  {{i64}* (i8*, {i64}*)*, i8*}, {{i64}* (i8*, {i64}*)*, i8*}* %14, i32 0, i32 0 
  store  {i64}* (i8*, {i64}*)* @__anon14_16, {i64}* (i8*, {i64}*)** %15, align 1 
  %16 = getelementptr  {{i64}* (i8*, {i64}*)*, i8*}, {{i64}* (i8*, {i64}*)*, i8*}* %14, i32 0, i32 1 
  store  i8* %9, i8** %16, align 1 
  ret {{i64}* (i8*, {i64}*)*, i8*}* %14 
}


define external ccc  {i64}* @_tree_to_list_22(i8* , {i64}* )    {
  %3 = bitcast i8* %0 to {{i64}* (i8*, {i64}*)*, i8*}* 
  %4 = getelementptr  {{i64}* (i8*, {i64}*)*, i8*}, {{i64}* (i8*, {i64}*)*, i8*}* %3, i32 0, i32 1 
  %5 = load  i8*, i8** %4, align 1 
  %6 = bitcast i8* %5 to {{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}* 
  %7 =  call ccc  i8*  @malloc(i32  ptrtoint ({{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*}* getelementptr inbounds ({{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*}, {{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*}* inttoptr (i32 0 to {{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*}*), i32 1) to i32))  
  %8 = bitcast i8* %7 to {{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*}* 
  %9 = bitcast {{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*}* %8 to i8* 
  %10 = getelementptr  {{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*}, {{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*}* %8, i32 0, i32 0 
  store  {{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}* %6, {{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}** %10, align 1 
  %11 = getelementptr  {{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}, {{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}* %6, i32 0, i32 1 
  %12 = load  {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}** %11, align 1 
  %13 = getelementptr  {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}* %12, i32 0, i32 0 
  %14 = load  {{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, {{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)** %13, align 1 
  %15 = bitcast {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}* %12 to i8* 
  %16 =  call ccc  {{i64}* (i8*, {i64}*)*, i8*}*  %14(i8*  %15, {i64}*  %1)  
  %17 =  call ccc  i8*  @malloc(i32  ptrtoint ({i64}* getelementptr inbounds ({i64}, {i64}* inttoptr (i32 0 to {i64}*), i32 1) to i32))  
  %18 = bitcast i8* %17 to {i64}* 
  %19 = getelementptr  {i64}, {i64}* %18, i32 0, i32 0 
  store  i64 0, i64* %19, align 1 
  %20 = bitcast {i64}* %18 to {i64}* 
  %21 = getelementptr  {{i64}* (i8*, {i64}*)*, i8*}, {{i64}* (i8*, {i64}*)*, i8*}* %16, i32 0, i32 0 
  %22 = load  {i64}* (i8*, {i64}*)*, {i64}* (i8*, {i64}*)** %21, align 1 
  %23 = bitcast {{i64}* (i8*, {i64}*)*, i8*}* %16 to i8* 
  %24 =  call ccc  {i64}*  %22(i8*  %23, {i64}*  %20)  
  ret {i64}* %24 
}


define external ccc  {i64}* @_list_to_tree_26(i8* , {i64}* )    {
; <label>:2:
  %3 = bitcast i8* %0 to {{i64}* (i8*, {i64}*)*, i8*}* 
  %4 = getelementptr  {{i64}* (i8*, {i64}*)*, i8*}, {{i64}* (i8*, {i64}*)*, i8*}* %3, i32 0, i32 1 
  %5 = load  i8*, i8** %4, align 1 
  %6 = bitcast i8* %5 to {{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}* 
  %7 =  call ccc  i8*  @malloc(i32  ptrtoint ({{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*}* getelementptr inbounds ({{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*}, {{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*}* inttoptr (i32 0 to {{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*}*), i32 1) to i32))  
  %8 = bitcast i8* %7 to {{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*}* 
  %9 = bitcast {{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*}* %8 to i8* 
  %10 = getelementptr  {{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*}, {{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*}* %8, i32 0, i32 0 
  store  {{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}* %6, {{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}** %10, align 1 
  %11 = getelementptr  {i64}, {i64}* %1, i32 0, i32 0 
  %12 = load  i64, i64* %11, align 1 
  switch i64 %12, label %L_0 [i64 0, label %L_2 i64 1, label %L_3] 
L_2:
  %13 = bitcast {i64}* %1 to {i64}* 
  %14 =  call ccc  i8*  @malloc(i32  ptrtoint ({i64}* getelementptr inbounds ({i64}, {i64}* inttoptr (i32 0 to {i64}*), i32 1) to i32))  
  %15 = bitcast i8* %14 to {i64}* 
  %16 = getelementptr  {i64}, {i64}* %15, i32 0, i32 0 
  store  i64 0, i64* %16, align 1 
  %17 = bitcast {i64}* %15 to {i64}* 
  br label %L_4 
L_3:
  %18 = bitcast {i64}* %1 to {i64, i64, {i64}*}* 
  %19 = getelementptr  {i64, i64, {i64}*}, {i64, i64, {i64}*}* %18, i32 0, i32 1 
  %20 = load  i64, i64* %19, align 1 
  %21 = getelementptr  {i64, i64, {i64}*}, {i64, i64, {i64}*}* %18, i32 0, i32 2 
  %22 = load  {i64}*, {i64}** %21, align 1 
  %23 = getelementptr  {{i64}* (i8*, {i64}*)*, i8*}, {{i64}* (i8*, {i64}*)*, i8*}* %3, i32 0, i32 0 
  %24 = load  {i64}* (i8*, {i64}*)*, {i64}* (i8*, {i64}*)** %23, align 1 
  %25 = bitcast {{i64}* (i8*, {i64}*)*, i8*}* %3 to i8* 
  %26 =  call ccc  {i64}*  %24(i8*  %25, {i64}*  %22)  
  %27 = getelementptr  {{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}, {{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}* %6, i32 0, i32 2 
  %28 = load  {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}** %27, align 1 
  %29 = getelementptr  {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}* %28, i32 0, i32 0 
  %30 = load  {{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, {{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)** %29, align 1 
  %31 = bitcast {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}* %28 to i8* 
  %32 =  call ccc  {{i64}* (i8*, i64)*, i8*}*  %30(i8*  %31, {i64}*  %26)  
  %33 = getelementptr  {{i64}* (i8*, i64)*, i8*}, {{i64}* (i8*, i64)*, i8*}* %32, i32 0, i32 0 
  %34 = load  {i64}* (i8*, i64)*, {i64}* (i8*, i64)** %33, align 1 
  %35 = bitcast {{i64}* (i8*, i64)*, i8*}* %32 to i8* 
  %36 =  call ccc  {i64}*  %34(i8*  %35, i64  %20)  
  br label %L_4 
L_4:
  %37 = phi {i64}* [%17, %L_2], [%36, %L_3] 
  br label %L_1 
L_0:
   call ccc  void  @match_error()  
  br label %L_1 
L_1:
  %38 = phi {i64}* [%37, %L_4], [undef, %L_0] 
  ret {i64}* %38 
}


define external ccc  {i64}* @_read_list_32(i8* , i64 )    {
; <label>:2:
  %3 = bitcast i8* %0 to {{i64}* (i8*, i64)*, i8*}* 
  %4 = getelementptr  {{i64}* (i8*, i64)*, i8*}, {{i64}* (i8*, i64)*, i8*}* %3, i32 0, i32 1 
  %5 = load  i8*, i8** %4, align 1 
  %6 = bitcast i8* %5 to {{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}* 
  %7 =  call ccc  i8*  @malloc(i32  ptrtoint ({{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*}* getelementptr inbounds ({{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*}, {{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*}* inttoptr (i32 0 to {{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*}*), i32 1) to i32))  
  %8 = bitcast i8* %7 to {{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*}* 
  %9 = bitcast {{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*}* %8 to i8* 
  %10 = getelementptr  {{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*}, {{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*}* %8, i32 0, i32 0 
  store  {{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}* %6, {{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}** %10, align 1 
  %11 = icmp eq i64 %1, 0 
  br i1 %11, label %L_0, label %L_1 
L_0:
  %12 =  call ccc  i8*  @malloc(i32  ptrtoint ({i64}* getelementptr inbounds ({i64}, {i64}* inttoptr (i32 0 to {i64}*), i32 1) to i32))  
  %13 = bitcast i8* %12 to {i64}* 
  %14 = getelementptr  {i64}, {i64}* %13, i32 0, i32 0 
  store  i64 0, i64* %14, align 1 
  %15 = bitcast {i64}* %13 to {i64}* 
  br label %L_2 
L_1:
  %16 =  call ccc  i8*  @malloc(i32  ptrtoint ({i64 (i8*, i64)*, i8*}* getelementptr inbounds ({i64 (i8*, i64)*, i8*}, {i64 (i8*, i64)*, i8*}* inttoptr (i32 0 to {i64 (i8*, i64)*, i8*}*), i32 1) to i32))  
  %17 = bitcast i8* %16 to {i64 (i8*, i64)*, i8*}* 
  %18 = getelementptr  {i64 (i8*, i64)*, i8*}, {i64 (i8*, i64)*, i8*}* %17, i32 0, i32 0 
  store  i64 (i8*, i64)* @read_int, i64 (i8*, i64)** %18, align 1 
  %19 = getelementptr  {i64 (i8*, i64)*, i8*}, {i64 (i8*, i64)*, i8*}* %17, i32 0, i32 0 
  %20 = load  i64 (i8*, i64)*, i64 (i8*, i64)** %19, align 1 
  %21 = bitcast {i64 (i8*, i64)*, i8*}* %17 to i8* 
  %22 =  call ccc  i64  %20(i8*  %21, i64  0)  
  %23 = sub   i64 %1, 1 
  %24 = getelementptr  {{i64}* (i8*, i64)*, i8*}, {{i64}* (i8*, i64)*, i8*}* %3, i32 0, i32 0 
  %25 = load  {i64}* (i8*, i64)*, {i64}* (i8*, i64)** %24, align 1 
  %26 = bitcast {{i64}* (i8*, i64)*, i8*}* %3 to i8* 
  %27 =  call ccc  {i64}*  %25(i8*  %26, i64  %23)  
  %28 =  call ccc  i8*  @malloc(i32  ptrtoint ({i64, i64, {i64}*}* getelementptr inbounds ({i64, i64, {i64}*}, {i64, i64, {i64}*}* inttoptr (i32 0 to {i64, i64, {i64}*}*), i32 1) to i32))  
  %29 = bitcast i8* %28 to {i64, i64, {i64}*}* 
  %30 = getelementptr  {i64, i64, {i64}*}, {i64, i64, {i64}*}* %29, i32 0, i32 0 
  store  i64 1, i64* %30, align 1 
  %31 = getelementptr  {i64, i64, {i64}*}, {i64, i64, {i64}*}* %29, i32 0, i32 1 
  store  i64 %22, i64* %31, align 1 
  %32 = getelementptr  {i64, i64, {i64}*}, {i64, i64, {i64}*}* %29, i32 0, i32 2 
  store  {i64}* %27, {i64}** %32, align 1 
  %33 = bitcast {i64, i64, {i64}*}* %29 to {i64}* 
  br label %L_2 
L_2:
  %34 = phi {i64}* [%15, %L_0], [%33, %L_1] 
  ret {i64}* %34 
}


define external ccc  i64 @_print_list_37(i8* , {i64}* )    {
; <label>:2:
  %3 = bitcast i8* %0 to {i64 (i8*, {i64}*)*, i8*}* 
  %4 = getelementptr  {i64 (i8*, {i64}*)*, i8*}, {i64 (i8*, {i64}*)*, i8*}* %3, i32 0, i32 1 
  %5 = load  i8*, i8** %4, align 1 
  %6 = bitcast i8* %5 to {{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}* 
  %7 =  call ccc  i8*  @malloc(i32  ptrtoint ({{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*}* getelementptr inbounds ({{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*}, {{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*}* inttoptr (i32 0 to {{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*}*), i32 1) to i32))  
  %8 = bitcast i8* %7 to {{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*}* 
  %9 = bitcast {{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*}* %8 to i8* 
  %10 = getelementptr  {{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*}, {{{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*}* %8, i32 0, i32 0 
  store  {{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}* %6, {{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}** %10, align 1 
  %11 = getelementptr  {i64}, {i64}* %1, i32 0, i32 0 
  %12 = load  i64, i64* %11, align 1 
  switch i64 %12, label %L_0 [i64 0, label %L_2 i64 1, label %L_3] 
L_2:
  %13 = bitcast {i64}* %1 to {i64}* 
  %14 =  call ccc  i8*  @malloc(i32  ptrtoint ({i64 (i8*, i64)*, i8*}* getelementptr inbounds ({i64 (i8*, i64)*, i8*}, {i64 (i8*, i64)*, i8*}* inttoptr (i32 0 to {i64 (i8*, i64)*, i8*}*), i32 1) to i32))  
  %15 = bitcast i8* %14 to {i64 (i8*, i64)*, i8*}* 
  %16 = getelementptr  {i64 (i8*, i64)*, i8*}, {i64 (i8*, i64)*, i8*}* %15, i32 0, i32 0 
  store  i64 (i8*, i64)* @print_newline, i64 (i8*, i64)** %16, align 1 
  %17 = getelementptr  {i64 (i8*, i64)*, i8*}, {i64 (i8*, i64)*, i8*}* %15, i32 0, i32 0 
  %18 = load  i64 (i8*, i64)*, i64 (i8*, i64)** %17, align 1 
  %19 = bitcast {i64 (i8*, i64)*, i8*}* %15 to i8* 
  %20 =  call ccc  i64  %18(i8*  %19, i64  0)  
  br label %L_4 
L_3:
  %21 = bitcast {i64}* %1 to {i64, i64, {i64}*}* 
  %22 = getelementptr  {i64, i64, {i64}*}, {i64, i64, {i64}*}* %21, i32 0, i32 1 
  %23 = load  i64, i64* %22, align 1 
  %24 = getelementptr  {i64, i64, {i64}*}, {i64, i64, {i64}*}* %21, i32 0, i32 2 
  %25 = load  {i64}*, {i64}** %24, align 1 
  %26 =  call ccc  i8*  @malloc(i32  ptrtoint ({i64 (i8*, i64)*, i8*}* getelementptr inbounds ({i64 (i8*, i64)*, i8*}, {i64 (i8*, i64)*, i8*}* inttoptr (i32 0 to {i64 (i8*, i64)*, i8*}*), i32 1) to i32))  
  %27 = bitcast i8* %26 to {i64 (i8*, i64)*, i8*}* 
  %28 = getelementptr  {i64 (i8*, i64)*, i8*}, {i64 (i8*, i64)*, i8*}* %27, i32 0, i32 0 
  store  i64 (i8*, i64)* @print_int, i64 (i8*, i64)** %28, align 1 
  %29 = getelementptr  {i64 (i8*, i64)*, i8*}, {i64 (i8*, i64)*, i8*}* %27, i32 0, i32 0 
  %30 = load  i64 (i8*, i64)*, i64 (i8*, i64)** %29, align 1 
  %31 = bitcast {i64 (i8*, i64)*, i8*}* %27 to i8* 
  %32 =  call ccc  i64  %30(i8*  %31, i64  %23)  
  %33 =  call ccc  i8*  @malloc(i32  ptrtoint ({i64 (i8*, i64)*, i8*}* getelementptr inbounds ({i64 (i8*, i64)*, i8*}, {i64 (i8*, i64)*, i8*}* inttoptr (i32 0 to {i64 (i8*, i64)*, i8*}*), i32 1) to i32))  
  %34 = bitcast i8* %33 to {i64 (i8*, i64)*, i8*}* 
  %35 = getelementptr  {i64 (i8*, i64)*, i8*}, {i64 (i8*, i64)*, i8*}* %34, i32 0, i32 0 
  store  i64 (i8*, i64)* @print_space, i64 (i8*, i64)** %35, align 1 
  %36 = getelementptr  {i64 (i8*, i64)*, i8*}, {i64 (i8*, i64)*, i8*}* %34, i32 0, i32 0 
  %37 = load  i64 (i8*, i64)*, i64 (i8*, i64)** %36, align 1 
  %38 = bitcast {i64 (i8*, i64)*, i8*}* %34 to i8* 
  %39 =  call ccc  i64  %37(i8*  %38, i64  0)  
  %40 = getelementptr  {i64 (i8*, {i64}*)*, i8*}, {i64 (i8*, {i64}*)*, i8*}* %3, i32 0, i32 0 
  %41 = load  i64 (i8*, {i64}*)*, i64 (i8*, {i64}*)** %40, align 1 
  %42 = bitcast {i64 (i8*, {i64}*)*, i8*}* %3 to i8* 
  %43 =  call ccc  i64  %41(i8*  %42, {i64}*  %25)  
  br label %L_4 
L_4:
  %44 = phi i64 [%20, %L_2], [%43, %L_3] 
  br label %L_1 
L_0:
   call ccc  void  @match_error()  
  br label %L_1 
L_1:
  %45 = phi i64 [%44, %L_4], [undef, %L_0] 
  ret i64 %45 
}


define external ccc  i64 @__yafl_toplevel(i8* , i64 )    {
  %3 = bitcast i8* %0 to {i64 (i8*, i64)*, i8*}* 
  %4 = getelementptr  {i64 (i8*, i64)*, i8*}, {i64 (i8*, i64)*, i8*}* %3, i32 0, i32 1 
  %5 = load  i8*, i8** %4, align 1 
  %6 = bitcast i8* %5 to {}* 
  %7 =  call ccc  i8*  @malloc(i32  ptrtoint ({{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}* getelementptr inbounds ({{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}, {{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}* inttoptr (i32 0 to {{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}*), i32 1) to i32))  
  %8 = bitcast i8* %7 to {{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}* 
  %9 = bitcast {{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}* %8 to i8* 
  %10 = getelementptr  {{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}, {{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}* %8, i32 0, i32 0 
  store  {}* %6, {}** %10, align 1 
  %11 =  call ccc  i8*  @malloc(i32  ptrtoint ({{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}* getelementptr inbounds ({{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}* inttoptr (i32 0 to {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*), i32 1) to i32))  
  %12 = bitcast i8* %11 to {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}* 
  %13 = getelementptr  {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}* %12, i32 0, i32 0 
  store  {{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)* @_tree_insert_10, {{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)** %13, align 1 
  %14 = getelementptr  {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}* %12, i32 0, i32 1 
  store  i8* %9, i8** %14, align 1 
  %15 = getelementptr  {{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}, {{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}* %8, i32 0, i32 2 
  store  {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}* %12, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}** %15, align 1 
  %16 =  call ccc  i8*  @malloc(i32  ptrtoint ({{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}* getelementptr inbounds ({{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}* inttoptr (i32 0 to {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*), i32 1) to i32))  
  %17 = bitcast i8* %16 to {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}* 
  %18 = getelementptr  {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}* %17, i32 0, i32 0 
  store  {{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)* @_tree_to_list_fast_18, {{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)** %18, align 1 
  %19 = getelementptr  {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}* %17, i32 0, i32 1 
  store  i8* %9, i8** %19, align 1 
  %20 = getelementptr  {{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}, {{}*, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}*, {{{i64}* (i8*, i64)*, i8*}* (i8*, {i64}*)*, i8*}*}* %8, i32 0, i32 1 
  store  {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}* %17, {{{i64}* (i8*, {i64}*)*, i8*}* (i8*, {i64}*)*, i8*}** %20, align 1 
  %21 =  call ccc  i8*  @malloc(i32  ptrtoint ({{i64}* (i8*, {i64}*)*, i8*}* getelementptr inbounds ({{i64}* (i8*, {i64}*)*, i8*}, {{i64}* (i8*, {i64}*)*, i8*}* inttoptr (i32 0 to {{i64}* (i8*, {i64}*)*, i8*}*), i32 1) to i32))  
  %22 = bitcast i8* %21 to {{i64}* (i8*, {i64}*)*, i8*}* 
  %23 = getelementptr  {{i64}* (i8*, {i64}*)*, i8*}, {{i64}* (i8*, {i64}*)*, i8*}* %22, i32 0, i32 0 
  store  {i64}* (i8*, {i64}*)* @_tree_to_list_22, {i64}* (i8*, {i64}*)** %23, align 1 
  %24 = getelementptr  {{i64}* (i8*, {i64}*)*, i8*}, {{i64}* (i8*, {i64}*)*, i8*}* %22, i32 0, i32 1 
  store  i8* %9, i8** %24, align 1 
  %25 =  call ccc  i8*  @malloc(i32  ptrtoint ({{i64}* (i8*, {i64}*)*, i8*}* getelementptr inbounds ({{i64}* (i8*, {i64}*)*, i8*}, {{i64}* (i8*, {i64}*)*, i8*}* inttoptr (i32 0 to {{i64}* (i8*, {i64}*)*, i8*}*), i32 1) to i32))  
  %26 = bitcast i8* %25 to {{i64}* (i8*, {i64}*)*, i8*}* 
  %27 = getelementptr  {{i64}* (i8*, {i64}*)*, i8*}, {{i64}* (i8*, {i64}*)*, i8*}* %26, i32 0, i32 0 
  store  {i64}* (i8*, {i64}*)* @_list_to_tree_26, {i64}* (i8*, {i64}*)** %27, align 1 
  %28 = getelementptr  {{i64}* (i8*, {i64}*)*, i8*}, {{i64}* (i8*, {i64}*)*, i8*}* %26, i32 0, i32 1 
  store  i8* %9, i8** %28, align 1 
  %29 =  call ccc  i8*  @malloc(i32  ptrtoint ({i64 (i8*, i64)*, i8*}* getelementptr inbounds ({i64 (i8*, i64)*, i8*}, {i64 (i8*, i64)*, i8*}* inttoptr (i32 0 to {i64 (i8*, i64)*, i8*}*), i32 1) to i32))  
  %30 = bitcast i8* %29 to {i64 (i8*, i64)*, i8*}* 
  %31 = getelementptr  {i64 (i8*, i64)*, i8*}, {i64 (i8*, i64)*, i8*}* %30, i32 0, i32 0 
  store  i64 (i8*, i64)* @read_int, i64 (i8*, i64)** %31, align 1 
  %32 = getelementptr  {i64 (i8*, i64)*, i8*}, {i64 (i8*, i64)*, i8*}* %30, i32 0, i32 0 
  %33 = load  i64 (i8*, i64)*, i64 (i8*, i64)** %32, align 1 
  %34 = bitcast {i64 (i8*, i64)*, i8*}* %30 to i8* 
  %35 =  call ccc  i64  %33(i8*  %34, i64  0)  
  %36 =  call ccc  i8*  @malloc(i32  ptrtoint ({{i64}* (i8*, i64)*, i8*}* getelementptr inbounds ({{i64}* (i8*, i64)*, i8*}, {{i64}* (i8*, i64)*, i8*}* inttoptr (i32 0 to {{i64}* (i8*, i64)*, i8*}*), i32 1) to i32))  
  %37 = bitcast i8* %36 to {{i64}* (i8*, i64)*, i8*}* 
  %38 = getelementptr  {{i64}* (i8*, i64)*, i8*}, {{i64}* (i8*, i64)*, i8*}* %37, i32 0, i32 0 
  store  {i64}* (i8*, i64)* @_read_list_32, {i64}* (i8*, i64)** %38, align 1 
  %39 = getelementptr  {{i64}* (i8*, i64)*, i8*}, {{i64}* (i8*, i64)*, i8*}* %37, i32 0, i32 1 
  store  i8* %9, i8** %39, align 1 
  %40 = getelementptr  {{i64}* (i8*, i64)*, i8*}, {{i64}* (i8*, i64)*, i8*}* %37, i32 0, i32 0 
  %41 = load  {i64}* (i8*, i64)*, {i64}* (i8*, i64)** %40, align 1 
  %42 = bitcast {{i64}* (i8*, i64)*, i8*}* %37 to i8* 
  %43 =  call ccc  {i64}*  %41(i8*  %42, i64  %35)  
  %44 =  call ccc  i8*  @malloc(i32  ptrtoint ({i64 (i8*, {i64}*)*, i8*}* getelementptr inbounds ({i64 (i8*, {i64}*)*, i8*}, {i64 (i8*, {i64}*)*, i8*}* inttoptr (i32 0 to {i64 (i8*, {i64}*)*, i8*}*), i32 1) to i32))  
  %45 = bitcast i8* %44 to {i64 (i8*, {i64}*)*, i8*}* 
  %46 = getelementptr  {i64 (i8*, {i64}*)*, i8*}, {i64 (i8*, {i64}*)*, i8*}* %45, i32 0, i32 0 
  store  i64 (i8*, {i64}*)* @_print_list_37, i64 (i8*, {i64}*)** %46, align 1 
  %47 = getelementptr  {i64 (i8*, {i64}*)*, i8*}, {i64 (i8*, {i64}*)*, i8*}* %45, i32 0, i32 1 
  store  i8* %9, i8** %47, align 1 
  %48 = getelementptr  {{i64}* (i8*, {i64}*)*, i8*}, {{i64}* (i8*, {i64}*)*, i8*}* %26, i32 0, i32 0 
  %49 = load  {i64}* (i8*, {i64}*)*, {i64}* (i8*, {i64}*)** %48, align 1 
  %50 = bitcast {{i64}* (i8*, {i64}*)*, i8*}* %26 to i8* 
  %51 =  call ccc  {i64}*  %49(i8*  %50, {i64}*  %43)  
  %52 = getelementptr  {{i64}* (i8*, {i64}*)*, i8*}, {{i64}* (i8*, {i64}*)*, i8*}* %22, i32 0, i32 0 
  %53 = load  {i64}* (i8*, {i64}*)*, {i64}* (i8*, {i64}*)** %52, align 1 
  %54 = bitcast {{i64}* (i8*, {i64}*)*, i8*}* %22 to i8* 
  %55 =  call ccc  {i64}*  %53(i8*  %54, {i64}*  %51)  
  %56 = getelementptr  {i64 (i8*, {i64}*)*, i8*}, {i64 (i8*, {i64}*)*, i8*}* %45, i32 0, i32 0 
  %57 = load  i64 (i8*, {i64}*)*, i64 (i8*, {i64}*)** %56, align 1 
  %58 = bitcast {i64 (i8*, {i64}*)*, i8*}* %45 to i8* 
  %59 =  call ccc  i64  %57(i8*  %58, {i64}*  %55)  
  ret i64 %59 
}
